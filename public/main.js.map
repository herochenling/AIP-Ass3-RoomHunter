{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create-post/create-post.component.css","webpack:///./src/app/components/create-post/create-post.component.html","webpack:///./src/app/components/create-post/create-post.component.ts","webpack:///./src/app/components/filter/filter.component.css","webpack:///./src/app/components/filter/filter.component.html","webpack:///./src/app/components/filter/filter.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/post-detail/post-detail.component.css","webpack:///./src/app/components/post-detail/post-detail.component.html","webpack:///./src/app/components/post-detail/post-detail.component.ts","webpack:///./src/app/components/posts/posts.component.css","webpack:///./src/app/components/posts/posts.component.html","webpack:///./src/app/components/posts/posts.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/flash-message.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"./guard/auth.guard\";\n\nimport { PostDetailComponent } from \"./components/post-detail/post-detail.component\";\nimport { PostsComponent } from \"./components/posts/posts.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { CreatePostComponent } from \"./components/create-post/create-post.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\"\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/posts\", pathMatch: \"full\" },\n  { path: \"posts/:id\", component: PostDetailComponent },\n  { path: \"posts\", component: PostsComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"add\", component: CreatePostComponent },\n  { path: \"profile\", component: ProfileComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"d-flex p-4\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"Room Hunter\";\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HttpModule } from \"@angular/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { AppRoutingModule } from \".//app-routing.module\";\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\n\nimport { PostsComponent } from \"./components/posts/posts.component\";\nimport { PostDetailComponent } from \"./components/post-detail/post-detail.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { CreatePostComponent } from \"./components/create-post/create-post.component\";\nimport { FilterComponent } from './components/filter/filter.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { PostService } from \"./services/post.service\";\nimport { ValidateService } from \"./services/validate.service\";\nimport { AuthService } from \"./services/auth.service\";\nimport { FlashMessageService } from \"./services/flash-message.service\";\n\nimport { AuthGuard } from \"./guard/auth.guard\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostsComponent,\n    PostDetailComponent,\n    LoginComponent,\n    RegisterComponent,\n    CreatePostComponent,\n    FilterComponent,\n    NavbarComponent,\n    ProfileComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, NgFlashMessagesModule.forRoot(), HttpModule],\n  providers: [PostService, ValidateService, AuthService, FlashMessageService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-hearder text-primary\\\">List My Room</h2>\\n<form>\\n  <br>\\n  <h3 class=\\\"text-muted\\\">Details</h3>\\n  <hr class=\\\"my-2\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">Title</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Enter title\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"roomType\\\">Room Type</label>\\n    <select class=\\\"form-control\\\" id=\\\"roomType\\\">\\n      <option>Private Room</option>\\n      <option>Room Shared with Others</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"rent\\\">Rent</label>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group mb-3\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\">$</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <span class=\\\"input-group-text\\\">Per Week</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">Street</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"street\\\" placeholder=\\\"Enter street\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-xs-2\\\">\\n      <label for=\\\"\\\">Suburb</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"suburb\\\" placeholder=\\\"Enter suburb\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"state\\\">State</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"State\\\" placeholder=\\\"Enter State\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"postcode\\\">Postcode</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"postcode\\\" placeholder=\\\"Enter postcode\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"description\\\">Description</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"exampleTextarea\\\" rows=\\\"5\\\"></textarea>\\n  </div>\\n\\n  <br>\\n  <h3 class=\\\"text-muted\\\">Contact Info</h3>\\n  <hr class=\\\"my-2\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Contact Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"Phone\\\">Phone</label>\\n    <input type=\\\"phone\\\" class=\\\"form-control\\\" id=\\\"phone\\\" placeholder=\\\"Enter phone\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Cancel</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\n\n/** This class is responsible for creating a new post and save it to the database */\nexport class CreatePostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"form-inline my-2 my-lg-0 p-2\\\">\\n  <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n  <button class=\\\"btn btn-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n</form>\\n\\n<div class=\\\"d-flex justify-content-start p-1 \\\">\\n  <div>\\n    <label>Area:&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"sydney\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"sydney\\\">Sydney&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"melbourne\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"melbourne\\\">Melbourne&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"brisbane\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"brisbane\\\">Brisbane&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"goldCoast\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"goldCoast\\\">Gold Coast&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-start p-1 \\\">\\n  <div>\\n    <label>Price:&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"less100\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"less100\\\">&lt; $100&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"price-100-200\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"price-100-200\\\">$100 - $200&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"price-200-300\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"price-200-300\\\">$200 - $300&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"price-300-400\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"price-300-400\\\">$300 - $400&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n  <div class=\\\"custom-control custom-checkbox \\\">\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"greater400\\\">\\n    <label class=\\\"custom-control-label\\\" for=\\\"greater400\\\">&gt; 400&nbsp;&nbsp;&nbsp;</label>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\n\n/** The class responsible for filtering posts based on users' selection  */\nexport class FilterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-hearder text-primary\\\">Login</h2>\\n\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"username\\\">Username</label>\\n    <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Enter Username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"col-form-label\\\" for=\\\"password\\\">Password</label>\\n    <input class=\\\"form-control\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\" Enter Password\\\">\\n  </div>\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessageService } from '../../services/flash-message.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n    private router: Router,\n    private flashMessageService: FlashMessageService) { }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if ((data as any).success) {\n        this.authService.storeUserData((data as any).token, (data as any).user);\n        this.flashMessageService.showMessage((data as any).msg, true);\n        this.router.navigate(['/profile']);\n      } else {\n        this.flashMessageService.showMessage((data as any).msg, false);\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Room Hunter</a>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbars\\\">\\n    <ul class=\\\"nav navbar-nav nav-left \\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLink]=\\\"['/posts']\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['add']\\\">List\\n          My Room</a>\\n      </li>\\n    </ul>\\n\\n    <ul class=\\\"nav navbar-nav nav-right\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n          [routerLink]=\\\"['/login']\\\">Login\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n          [routerLink]=\\\"['/register']\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n          [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</nav>\\n<ng-flash-message></ng-flash-message>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { FlashMessageService } from \"../../services/flash-message.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private flashMessageService: FlashMessageService,\n    private router: Router) { }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n    this.flashMessageService.showMessage(\"You are logged out!\", true);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Show the details of selected post  -->\\n<div *ngIf=\\\"post\\\">\\n  <h1>{{post.title | uppercase}} </h1>\\n  <h2>Post by: {{post.byUser}} {{post.postDate | date:'MM/dd/yyyy, h:mm a'}}</h2>\\n  <h4>Room type: {{post.roomType}}</h4>\\n  <h4>Rent: ${{post.rent}} / week</h4>\\n  <h4>Address: {{post.street}} {{post.suburb}} {{post.city}} {{post.state}} {{post.postCode}}</h4>\\n  <h4>Contact: {{post.contactName}} {{post.phone}}</h4>\\n  <br>\\n  <p>Description: </p>\\n  <p>{{post.description}}</p>\\n  <button (click)=\\\"goBack()\\\">go back</button>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\n\nimport { Post } from \"../../post\";\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: \"app-post-detail\",\n  templateUrl: \"./post-detail.component.html\",\n  styleUrls: [\"./post-detail.component.css\"]\n})\n\n/** This class is responsible for  displaying the details of selected post */\nexport class PostDetailComponent implements OnInit {\n  post: Post;\n  constructor(private route: ActivatedRoute, private location: Location, private postService: PostService) { }\n\n  /** Retrieve post id from clicked url and then get the target post  */\n  getPost(): void {\n    const id = this.route.snapshot.paramMap.get(\"id\"); //get post id from url\n    this.postService.getPostById(id).subscribe((res: Post) => {\n      this.post = res;\n    });\n  }\n\n  ngOnInit() {\n    this.getPost();\n  }\n\n  /** back to previous page */\n  goBack(): void {\n    this.location.back();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-hearder text-primary\\\">Rooms for rent</h2>\\n\\n<div>\\n  <app-filter></app-filter>\\n</div>\\n\\n<div class=\\\"list-group-flush\\\">\\n  <div *ngFor=\\\"let post of posts\\\">\\n    <a routerLink=\\\"/posts/{{post._id}}\\\" class=\\\"list-group-item list-group-item-action\\\">\\n      <span>{{post.title}}</span>\\n      <span class=\\\"badge badge-primary\\\">{{post.rent}}$ / Week</span>\\n    </a>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Post } from \"../../post\";\nimport { PostService } from \"../../services/post.service\";\n\n@Component({\n  selector: \"app-posts\",\n  templateUrl: \"./posts.component.html\",\n  styleUrls: [\"./posts.component.css\"]\n})\n\n/** This class is responsible for retrieve and list all the posts  */\nexport class PostsComponent implements OnInit {\n  posts: Post[];\n  constructor(private postService: PostService) { }\n\n  ngOnInit() {\n    this.fetchPosts();\n  }\n\n  // get all the posts from server by uisng post service\n  fetchPosts() {\n    this.postService.getPosts().subscribe((data: Post[]) => {\n      this.posts = data;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-hearder text-primary\\\">Profile</h2>\\n<div *ngIf=\\\"user\\\">\\n    <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n        <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = (profile as any).user;\n    },\n      err => {\n        return false;\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-hearder text-primary\\\">Register</h2>\\n\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n    <div *ngIf=\\\"failed\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"username\\\">Username</label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Enter Username\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"email\\\">Email</label>\\n            <input class=\\\"form-control\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" aria-describedby=\\\"emailHelp\\\"\\n                placeholder=\\\"Enter Email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"password\\\">Password</label>\\n            <input class=\\\"form-control\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\"\\n                placeholder=\\\" Enter Password\\\">\\n        </div>\\n        <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n    </div>\\n</form>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessageService } from \"../../services/flash-message.service\";\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Input() username: String;\n  @Input() email: String;\n  @Input() password: String;\n  msgType: String;\n  failed: Boolean = true;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessageService: FlashMessageService,\n    private router: Router) { }\n\n  /**\n   * Register a user and add it to database by using auth service.\n   */\n  onRegisterSubmit() {\n    // create a user object by using input data.\n    const user = {\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    //register user\n    this.authService.registerUser(user).subscribe(data => {\n      if ((data as any).success) {\n        this.flashMessageService.showMessage((data as any).msg, true);\n        this.failed = false;\n        setTimeout(() => { this.router.navigate(['/login']); }, 3000);\n      } else {\n        this.flashMessageService.showMessage((data as any).msg, false);\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) { }\n\n    canActivate() {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  url = \"http://localhost:4000\"\n\n  //headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n  //{ headers: this.headers }\n\n  constructor(private http: HttpClient) { }\n\n  /** \n   * register user in the backend and send back response message \n   */\n  registerUser(user) {\n    return this.http.post(`${this.url}/users/register`, user, this.httpOptions);\n  }\n\n  /**\n   * Authenticate user: if success, return user info and tokens otherwise return false\n   */\n  authenticateUser(user) {\n    return this.http.post(`${this.url}/users/authenticate`, user, this.httpOptions);\n  }\n\n  /**\n   * Get user profile\n   */\n  getProfile() {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      'Authorization': this.authToken,\n      'Content-Type': 'application/json'\n    });\n    return this.http.get(`${this.url}/users/profile`, { headers: headers });\n  }\n\n  /**\n   * Store token and user info in the local storage\n   */\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  /**\n   * Load token from local storage into class member authToken. \n   */\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  /**\n   * Logout, clear all stored data\n   */\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  /**\n   * Check if the token exists\n   */\n  isLoggedIn() {\n    if (localStorage.id_token == undefined) {\n      return false;\n    } else {\n      const helper = new JwtHelperService();\n      return !helper.isTokenExpired(localStorage.id_token);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlashMessageService {\n\n  msgType: String;\n\n  constructor(private ngFlashMessageService: NgFlashMessageService) { }\n\n  /** \n   * Flush message shows error or sucess message\n   */\n  showMessage(msg, isSuccess) {\n    if (isSuccess) {\n      this.msgType = \"success\";\n    } else {\n      this.msgType = \"danger\";\n    }\n    this.ngFlashMessageService.showFlashMessage({\n      messages: [msg],\n      dismissible: true,\n      timeout: 5000, //5 sec\n      type: this.msgType.toString()\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\n/** Service for getting posts from the server */\nexport class PostService {\n\n  //base url of the server\n  uri = \"http://localhost:4000\";\n\n  constructor(private http: HttpClient) { }\n\n  getPosts() {\n    return this.http.get(`${this.uri}/posts`);\n  }\n\n  getPostById(id) {\n    return this.http.get(`${this.uri}/posts/${id}`);\n  }\n\n  createPost(title, street, suburb, city, state, postCode, roomType, contactName,\n    phone, rent, byUser, postDate, description) {\n    const post = {\n      title: title,\n      street: street,\n      suburb: suburb,\n      city: city,\n      state: state,\n      postCode: postCode,\n      roomType: roomType,\n      contactName: contactName,\n      phone: phone,\n      rent: rent,\n      byUser: byUser,\n      postDate: postDate,\n      description: description\n    };\n    // adding a new post by sending a post request\n    return this.http.post(`${this.uri}/posts/add`, post);\n  }\n\n  deletePost(id) {\n    return this.http.get(`${this.uri}/posts/delete/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.username == undefined || user.password == undefined || user.email == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}